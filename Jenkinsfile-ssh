/* groovylint-disable NestedBlockDepth */
/* groovylint-disable-next-line CompileStatic */
pipeline {
    agent any
    //always use double quotes for echo so that it works with accessing environmental variables
    //dont use variables in stage names. error will be thrown

    options {
        timestamps() //Add timestamps to the Console Output
    }

    environment{
        SSH_TTY="/dev/pty0"
    }


    stages {
        stage('Workflow') {
            stages {
                stage('Clone') {
                    steps {
                        echo 'Cloning...'
                        cleanWs() //Workspace Clean Plugin to delete the workspace before cloning and building
                        git 'https://github.com/ramyabala221190/jenkinsTest.git'
                    }
                    post {
                        success {
                            echo 'Clone step completed'
                        }
                    }
                }

                stage('Connect using SSH') {
                    steps {
                        echo 'Execute SSH..'

withCredentials([sshUserPrivateKey(
    credentialsId: 'sshConnectionToMyWindows',usernameVariable: 'username',keyFileVariable:'keyfile',passphraseVariable:'passphrase')]) {
        //13:28:20  Pseudo-terminal will not be allocated because stdin is not a terminal.
        sshagent(['sshConnectionToMyWindows']) {
    bat '''
    echo "${keyfile}" | base64 -d > ssh_key
    chmod 600 ssh_key
    cat ~/.ssh/*.pub | base64 -d >> ~/.ssh/known_hosts
    ssh -tt -vvv -i ${ssh_key} ${username}@192.168.29.185 uname -a
    '''
}  
}
                       
                    }
                    post {
                        success {
                            echo 'SSH connection completed'
                        }
                    }
                }
               
            }
            post {
                failure {
                    echo 'Workflow failed'
                }
                success {
                    echo 'Workflow succeeded'
                }
            }
        }
    }
}