/* groovylint-disable NestedBlockDepth */
/* groovylint-disable-next-line CompileStatic */


pipeline {
    agent any

    options {
        skipDefaultCheckout(true) //prevent default checkout of git branch
        timestamps() //Add timestamps to the Console Output
    }

    environment{
        environ="${env.environment}" //environment info from pipeline input
        buildNumber="${env.BUILD_NUMBER}"
        branchName="${env.Branch}"
        }

    stages{
        stage('Docker Workflow') {
            stages{
                stage('Clone') {
                    steps {
                        echo 'Cloning...'
                        cleanWs() //Workspace Clean Plugin to delete the workspace before cloning and building
                        //we are using the installed Git plugin to clone the branch from the repo
                        git branch: "${branchName}", url: 'https://github.com/ramyabala221190/jenkinsTest.git'
                    }

                }
              
                stage('Docker Build') {
                    steps {
                        echo 'Running Docker Compose build'
                        bat  "docker compose -f docker/docker-compose.yml build"
                    }
                }

 
                stage('Docker Compose up to run application locally') {
                    
                    steps {
                        /*
connect to a remote server, pull the docker image and run docker compose up
                        */
                        echo 'Running Docker Compose Up'
                        script{
    bat "docker compose -f docker/docker-compose.yml up -d --remove-orphans --no-build" //- d ensures it runs in deatched mode
                        }
                    }
                }
            }
        }
    }

}