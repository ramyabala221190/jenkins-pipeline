/* groovylint-disable NestedBlockDepth */
/* groovylint-disable-next-line CompileStatic */
pipeline {
    agent any
    //always use double quotes for echo so that it works with accessing environmental variables
    //dont use variables in stage names. error will be thrown

    tools { nodejs 'Node' }

    options {
        timestamps() //Add timestamps to the Console Output
    }


    stages {
        stage('Workflow') {
            stages {
                stage('Clone') {
                    steps {
                        echo 'Cloning...'
                        cleanWs() //Workspace Clean Plugin to delete the workspace before cloning and building
                        git branch: "${env.Branch}", url: 'https://github.com/ramyabala221190/nodejs-express-pm2-withoutDocker.git'
                    }
                    post {
                        success {
                            echo 'Clone step completed'
                        }
                    }
                }
                stage('Build step')  {
                    // when{
                    //     //execute the stage only when the env variable with key environment has value prod
                    //     //we are providing value for this key when running the pipeline
                    //     environment name: 'environment', value: 'prod'
                    // }
                    steps {
                        echo "Building using ${environment} configuration"
                        //sh "npm run pm2-${environment}-deploy"
                        bat "C:/Program Files/Git/git-bash.exe deploy.sh"
                    }
                    post {
                        success {
                            echo 'Build step completed'
                        }
                    }
                }

            }
            post {
                failure {
                    echo 'Workflow failed'
                }
                success {
                    echo 'Workflow succeeded'
                }
            }
        }
    }
}