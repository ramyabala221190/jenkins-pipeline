/* groovylint-disable NestedBlockDepth */
/* groovylint-disable-next-line CompileStatic */
pipeline {
    agent any

    options {
        skipDefaultCheckout(true) //dont do the default checkout
        timestamps() //Add timestamps to the Console Output
    }

    stages{
        stage('Docker Workflow') {
            stages{
              
                stage('Docker Build') {
                    steps {
                        echo 'Building'
                        /*
                      docker builds an image using the Docker file present in the root of the github.com/ramyabala221190/jenkinsTest.git
                      repo and the branch name we provide as user input in the pipeline.
                      jenkins-test is the image and the build no will be the tag. We are also passing the environment name provided as input
                      in the pipeline as argument. The argument can be accessed in the Docker file
                        */
                        bat "docker build github.com/ramyabala221190/jenkinsTest.git#${env.Branch} -t jenkins-test:${env.BUILD_NUMBER} --build-arg env=${environment}"
                    }
                }
                stage('Docker Run in Prod') {
                    when {
                        environment name: 'environment', value: 'prod'
                    }
                    steps {
                        echo 'Running Docker run in Prod'
                        script{
                            /*

Run the jenkins-test image. A container will be created with some random name or you can specify the name using the --name flag.
The container port 80 is mapped to the localhost port 8083. You can access the application at localhost:8083 in the browser once the
container starts running.
                            */
                            bat "docker run -dp 8083:80 -it jenkins-test:${env.BUILD_NUMBER}"
                        }
                    }
                }
                stage('Docker Run in Dev') {
                    when {
                        environment name: 'environment', value: 'dev'
                    }
                    steps {
                        echo 'Running Docker run in Dev'
                        script{
                             /*
Run the jenkins-test image. A container will be created with some random name or you can specify the name using the --name flag.
The container port 80 is mapped to the localhost port 8082. You can access the application at localhost:8082 in the browser once the
container starts running.
                            */
                            bat "docker run -dp 8082:80 -it jenkins-test:${env.BUILD_NUMBER}"
                        }
                    }
                }
            }
        }
    }
}