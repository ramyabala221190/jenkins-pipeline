/* groovylint-disable NestedBlockDepth */
/* groovylint-disable-next-line CompileStatic */


pipeline {
    agent any

    options {
        skipDefaultCheckout(true) //prevent default checkout of git branch
        timestamps() //Add timestamps to the Console Output
    }

    environment{
          server_ip="172.203.235.150"
        }

    stages{
        stage('Docker Workflow') {
            stages{
                stage('Clone') {
                    steps {
                        echo 'Cloning...'
                        cleanWs() //Workspace Clean Plugin to delete the workspace before cloning and building
                        //we are using the installed Git plugin to clone the branch from the repo
                        git branch: "${env.Branch}", url: 'https://github.com/ramyabala221190/envrionment-var-angular.git'
                    }
                
            }

            stage('Install modules'){
                steps{
                    bat "npm install"
                }
            }
              
                stage('Build project') {
                    steps {
                        bat  "npm run build"
                    }
                }


                stage('Deploy to Remote VM'){
          
                    steps{
                        echo 'Execute SSH..'
                        echo "${env.JENKINS_HOME} ${env.JOB_NAME}"
sshPublisher(publishers: [sshPublisherDesc(configName: 'testingNginx', 
transfers: [sshTransfer(
    cleanRemote: false, excludes: '', execCommand: '', execTimeout: 120000, flatten: false, 
    makeEmptyDirs: false, noDefaultExcludes: false, patternSeparator: '[, ]+', 
    remoteDirectory: '/var/www/html/', remoteDirectorySDF: false, removePrefix: '', 
    sourceFiles: "${env.JENKINS_HOME}/workspace/${env.JOB_NAME}/dist/*/**")], usePromotionTimestamp: false, useWorkspaceInPromotion: false, 
    verbose: true)])
                    }
                }

            }
        }
    }

}
